import type { Student } from "../types";

// Mock student data
const mockStudents: Student[] = [
  {
    id: "20190101023",
    studentNumber: "20190101023",
    firstName: "Ahmet",
    lastName: "Yılmaz",
    name: "Ahmet Yılmaz",
    email: "ahmet.yilmaz@example.com",
    departmentId: "dept-1",
    departmentName: "Bilgisayar Mühendisliği",
    department: "Bilgisayar Mühendisliği",
    facultyId: "fac-1",
    facultyName: "Mühendislik Fakültesi",
    programName: "Bilgisayar Mühendisliği",
    enrollDate: "2019-09-01",
    currentGpa: 3.42,
    gpa: 3.42,
    currentEctsCompleted: 180,
    graduationStatus: 5,
    status: "Normal Öğrenim",
    assignedAdvisorUserId: "advisor-1",
    activeGraduationProcessId: "process-1",
    activeGraduationProcessStatus: 5,
    activeGraduationProcessAcademicTerm: "2023-2024 Fall",
    activeGraduationProcessInitiationDate: "2023-09-01",
    activeGraduationProcessLastUpdateDate: "2023-10-15",
    phone: "+90 555 123 4567",
    lastMeeting: "15.05.2023",
  },
  {
    id: "20190102034",
    studentNumber: "20190102034",
    firstName: "Ayşe",
    lastName: "Kaya",
    name: "Ayşe Kaya",
    email: "ayse.kaya@example.com",
    departmentId: "dept-1",
    departmentName: "Bilgisayar Mühendisliği",
    department: "Bilgisayar Mühendisliği",
    facultyId: "fac-1",
    facultyName: "Mühendislik Fakültesi",
    programName: "Bilgisayar Mühendisliği",
    enrollDate: "2019-09-01",
    currentGpa: 2.85,
    gpa: 2.85,
    currentEctsCompleted: 160,
    graduationStatus: 6,
    status: "Şartlı Geçme",
    assignedAdvisorUserId: "advisor-1",
    activeGraduationProcessId: "process-2",
    activeGraduationProcessStatus: 6,
    activeGraduationProcessAcademicTerm: "2023-2024 Fall",
    activeGraduationProcessInitiationDate: "2023-09-01",
    activeGraduationProcessLastUpdateDate: "2023-10-10",
    phone: "+90 555 234 5678",
    lastMeeting: "10.06.2023",
  },
  {
    id: "20180103045",
    studentNumber: "20180103045",
    firstName: "Mehmet",
    lastName: "Demir",
    name: "Mehmet Demir",
    email: "mehmet.demir@example.com",
    departmentId: "dept-2",
    departmentName: "Elektrik-Elektronik Mühendisliği",
    department: "Elektrik-Elektronik Mühendisliği",
    facultyId: "fac-1",
    facultyName: "Mühendislik Fakültesi",
    programName: "Elektrik-Elektronik Mühendisliği",
    enrollDate: "2018-09-01",
    currentGpa: 3.78,
    gpa: 3.78,
    currentEctsCompleted: 240,
    graduationStatus: 8,
    status: "Mezuniyet Aşaması",
    assignedAdvisorUserId: "advisor-2",
    activeGraduationProcessId: "process-3",
    activeGraduationProcessStatus: 8,
    activeGraduationProcessAcademicTerm: "2023-2024 Fall",
    activeGraduationProcessInitiationDate: "2023-09-01",
    activeGraduationProcessLastUpdateDate: "2023-10-05",
    phone: "+90 555 345 6789",
    lastMeeting: "05.07.2023",
  },
  {
    id: "20190104056",
    studentNumber: "20190104056",
    firstName: "Zeynep",
    lastName: "Öztürk",
    name: "Zeynep Öztürk",
    email: "zeynep.ozturk@example.com",
    departmentId: "dept-1",
    departmentName: "Bilgisayar Mühendisliği",
    department: "Bilgisayar Mühendisliği",
    facultyId: "fac-1",
    facultyName: "Mühendislik Fakültesi",
    programName: "Bilgisayar Mühendisliği",
    enrollDate: "2019-09-01",
    currentGpa: 3.21,
    gpa: 3.21,
    currentEctsCompleted: 170,
    graduationStatus: 5,
    status: "Normal Öğrenim",
    assignedAdvisorUserId: "advisor-1",
    activeGraduationProcessId: null,
    activeGraduationProcessStatus: null,
    activeGraduationProcessAcademicTerm: null,
    activeGraduationProcessInitiationDate: null,
    activeGraduationProcessLastUpdateDate: null,
    phone: "+90 555 456 7890",
  },
  {
    id: "20180105067",
    studentNumber: "20180105067",
    firstName: "Can",
    lastName: "Yıldız",
    name: "Can Yıldız",
    email: "can.yildiz@example.com",
    departmentId: "dept-2",
    departmentName: "Elektrik-Elektronik Mühendisliği",
    department: "Elektrik-Elektronik Mühendisliği",
    facultyId: "fac-1",
    facultyName: "Mühendislik Fakültesi",
    programName: "Elektrik-Elektronik Mühendisliği",
    enrollDate: "2018-09-01",
    currentGpa: 2.65,
    gpa: 2.65,
    currentEctsCompleted: 200,
    graduationStatus: 6,
    status: "Şartlı Geçme",
    assignedAdvisorUserId: "advisor-2",
    activeGraduationProcessId: "process-4",
    activeGraduationProcessStatus: 6,
    activeGraduationProcessAcademicTerm: "2023-2024 Fall",
    activeGraduationProcessInitiationDate: "2023-09-01",
    activeGraduationProcessLastUpdateDate: "2023-10-01",
    phone: "+90 555 567 8901",
    lastMeeting: "20.04.2023",
  },
  {
    id: "20170106078",
    studentNumber: "20170106078",
    firstName: "Elif",
    lastName: "Şahin",
    name: "Elif Şahin",
    email: "elif.sahin@example.com",
    departmentId: "dept-3",
    departmentName: "Makine Mühendisliği",
    department: "Makine Mühendisliği",
    facultyId: "fac-1",
    facultyName: "Mühendislik Fakültesi",
    programName: "Makine Mühendisliği",
    enrollDate: "2017-09-01",
    currentGpa: 3.95,
    gpa: 3.95,
    currentEctsCompleted: 240,
    graduationStatus: 11,
    status: "Mezuniyet Aşaması",
    assignedAdvisorUserId: "advisor-3",
    activeGraduationProcessId: "process-5",
    activeGraduationProcessStatus: 11,
    activeGraduationProcessAcademicTerm: "2023-2024 Fall",
    activeGraduationProcessInitiationDate: "2023-09-01",
    activeGraduationProcessLastUpdateDate: "2023-10-12",
    phone: "+90 555 678 9012",
    lastMeeting: "12.06.2023",
  },
  {
    id: "20190107089",
    studentNumber: "20190107089",
    firstName: "Burak",
    lastName: "Koç",
    name: "Burak Koç",
    email: "burak.koc@example.com",
    departmentId: "dept-3",
    departmentName: "Makine Mühendisliği",
    department: "Makine Mühendisliği",
    facultyId: "fac-1",
    facultyName: "Mühendislik Fakültesi",
    programName: "Makine Mühendisliği",
    enrollDate: "2019-09-01",
    currentGpa: 3.15,
    gpa: 3.15,
    currentEctsCompleted: 180,
    graduationStatus: 5,
    status: "Normal Öğrenim",
    assignedAdvisorUserId: "advisor-3",
    activeGraduationProcessId: null,
    activeGraduationProcessStatus: null,
    activeGraduationProcessAcademicTerm: null,
    activeGraduationProcessInitiationDate: null,
    activeGraduationProcessLastUpdateDate: null,
    phone: "+90 555 789 0123",
  },
  {
    id: "20190108090",
    studentNumber: "20190108090",
    firstName: "Deniz",
    lastName: "Arslan",
    name: "Deniz Arslan",
    email: "deniz.arslan@example.com",
    departmentId: "dept-4",
    departmentName: "Endüstri Mühendisliği",
    department: "Endüstri Mühendisliği",
    facultyId: "fac-1",
    facultyName: "Mühendislik Fakültesi",
    programName: "Endüstri Mühendisliği",
    enrollDate: "2019-09-01",
    currentGpa: 2.75,
    gpa: 2.75,
    currentEctsCompleted: 160,
    graduationStatus: 6,
    status: "Şartlı Geçme",
    assignedAdvisorUserId: "advisor-4",
    activeGraduationProcessId: "process-6",
    activeGraduationProcessStatus: 6,
    activeGraduationProcessAcademicTerm: "2023-2024 Fall",
    activeGraduationProcessInitiationDate: "2023-09-01",
    activeGraduationProcessLastUpdateDate: "2023-09-25",
    phone: "+90 555 890 1234",
    lastMeeting: "25.05.2023",
  },
];

// API function to get students data
export const getStudentsMock = async (): Promise<Student[]> => {
  // Simulate API call delay
  await new Promise((resolve) => setTimeout(resolve, 800));

  return mockStudents;
};

// API function to send email to student
export const sendEmailToStudentMock = async (
  studentId: string,
  subject: string,
  message: string
): Promise<{ success: boolean }> => {
  // Simulate API call delay
  await new Promise((resolve) => setTimeout(resolve, 1000));

  // Simulate validation
  if (!studentId.trim() || !subject.trim() || !message.trim()) {
    throw new Error("Tüm alanlar doldurulmalıdır");
  }

  // Find student to validate the ID
  const student = mockStudents.find((student) => student.id === studentId);
  if (!student) {
    throw new Error("Öğrenci bulunamadı");
  }

  // Simulate successful response
  return { success: true };
};
